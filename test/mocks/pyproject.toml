[tool.poetry]
name = "caller-receiver"
version = "0.1.0"
description = "Receiver for testing purposes"
authors = ["W. Ross Morrow <morrowwr@gmail.com>"]
packages = [{include = "receiver"}]

[tool.poetry.dependencies]
python = "^3.10"
flask = "^2.3.2"
flask-httpauth = "^4.8.0"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.3.0"
flake8 = "^6.0.0"
types-flask = "^1.1.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
include = 'receiver\/.*\.py$|test\/.*\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \venv
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | generated
  )/
)
'''

[tool.isort]
src_paths = ["app", "tests"]
profile = "black"
line_length = 120
multi_line_output = 3
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
force_sort_within_sections = true
force_alphabetical_sort_within_sections = true
extend_skip = "generated"
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
show_error_codes = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true # flask_httpauth
exclude = ["venv", ".venv"]

[tool.coverage.run]
branch = true
source = ["app"]

[tool.coverage.report]
show_missing = true
fail_under = 30
